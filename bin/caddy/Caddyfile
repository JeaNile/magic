# 文件服务
:80 {
    # 上传文件服务根目录
    root * /srv/files
    
    # 启用文件浏览
    file_server browse
    
       # 为文件服务添加专门的前缀路径
    @static_files {
        path /files/*
    }
    
    # 对匹配的静态文件路径提供文件服务
    handle @static_files {
        uri strip_prefix /files
        file_server browse
    }
    
    # 启用压缩
    encode gzip
    
    # 启用压缩
    encode gzip
    
    # 设置缓存
    header {
        Cache-Control "public, max-age=3600"
    }

    # WebSocket处理
    @websockets {
        header Connection *Upgrade*
        header Upgrade websocket
    }
    
    # 反向代理WebSocket请求
    reverse_proxy @websockets {
        to magic-service:9502
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
        header_down Access-Control-Allow-Origin *
    }

    # 反向代理 API 服务
    reverse_proxy /api/* {
        to magic-service:9501
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
        header_down Access-Control-Allow-Origin *
    }

    # 反向代理 API 服务
    reverse_proxy /v1/* {
        to magic-service:9501
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
        header_down Access-Control-Allow-Origin *
    }
    
    # 默认将所有其他请求代理到 magic-web 服务
    reverse_proxy {
        to magic-web:8080
        header_up Host {host}
        header_up X-Real-IP {remote}
        header_up X-Forwarded-For {remote}
        header_up X-Forwarded-Proto {scheme}
    }
    
    # 日志配置
    log {
        output stdout
        format console
    }
} 